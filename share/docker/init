#!/bin/sh

ERROR()
{
  printf 'error: '
  printf "$@"
  printf '\n'
  exit 1
}

config_file=${CONFIG_FILE}
[ -z "$config_file" ] && ERROR "CONFIG_FILE should be specified in the environment variable";
db_host=${DB_HOST}
[ -z "$db_host" ] && ERROR "DB_HOST should be specified in the environment variable";
database=${DB_NAME}
[ -z "$database" ] && ERROR "DB_NAME should be specified in the environment variable";
password=${DB_PASSWORD}
[ -z "$password" ] && ERROR "DB_PASSWORD should be specified in the environment variable";

NODE_1=${NODE_1:="unknown 127.0.0.1:2135 127.0.0.1:2136"}

dbTag="@CHANGE-TO-DBNAME"
pwTag="@CHANGE-TO-SECURE-PASSWORD@"

sed_cmd="/node {/,/\}/{/.*/d};/# connections to bitmarkd nodes/,/^\}/{/^\ *$/d}"
sed_cmd="${sed_cmd};s/$dbTag/$database/g;s/$pwTag/$password/g"
sed_cmd="${sed_cmd};/M.database = {/,/\}/{s/host = .*/host = \"${db_host}\",/}"
sed_cmd="${sed_cmd};/M.database = {/,/\}/{s/port = .*/port = \"5432\",/}"

if [ -n "${DATA_DIR}" ]
then
  sed_cmd="${sed_cmd};s#/var/lib/updaterd/#$DATA_DIR#"
fi

if [ -n "${CHAIN}" ]
then
  sed_cmd="${sed_cmd};s/^M.chain = .*/M.chain = \"${CHAIN}\"/"
fi

i=0
nodes=""
while true
do
	i=$(( i + 1 ))
	node=$(eval "echo \$NODE_$i")
	[ -z "$node" ] && break;
	nodes="$nodes$(echo $node | awk '{ printf "      {\\n        public_key = \"%s\",\\n        subscribe = \"%s\",\\n        connect = \"%s\"\\n      },\\n",$1,$2,$3 }')"
done


sed_cmd="${sed_cmd};/-- more connect entries/a\ $nodes"
sed -i -e "${sed_cmd}" ${config_file}
